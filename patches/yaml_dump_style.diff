Index: django/core/serializers/pyyaml.py
===================================================================
--- django/core/serializers/pyyaml.py	(revision 15535)
+++ django/core/serializers/pyyaml.py	(working copy)
@@ -38,7 +38,9 @@
             super(Serializer, self).handle_field(obj, field)
 
     def end_serialization(self):
-        yaml.dump(self.objects, self.stream, Dumper=DjangoSafeDumper, **self.options)
+        yaml.dump(self.objects, self.stream, Dumper=DjangoSafeDumper,
+                  default_flow_style=self.options.pop('flowstyle', True),
+                  **self.options)
 
     def getvalue(self):
         return self.stream.getvalue()
@@ -53,4 +55,3 @@
         stream = stream_or_string
     for obj in PythonDeserializer(yaml.load(stream), **options):
         yield obj
-
Index: django/core/management/commands/dumpdata.py
===================================================================
--- django/core/management/commands/dumpdata.py	(revision 15535)
+++ django/core/management/commands/dumpdata.py	(working copy)
@@ -15,6 +15,10 @@
         make_option('--database', action='store', dest='database',
             default=DEFAULT_DB_ALIAS, help='Nominates a specific database to load '
                 'fixtures into. Defaults to the "default" database.'),
+        make_option('--flowstyle', action='store_true', dest='flowstyle',
+                    default=True, help='Uses flow style for YAML data dump.'),
+        make_option('--blockstyle', action='store_false', dest='flowstyle',
+                    help='Uses block style for YAML data dump.'),
         make_option('-e', '--exclude', dest='exclude',action='append', default=[],
             help='An appname or appname.ModelName to exclude (use multiple --exclude to exclude multiple apps/models).'),
         make_option('-n', '--natural', action='store_true', dest='use_natural_keys', default=False,
@@ -32,6 +36,7 @@
 
         format = options.get('format','json')
         indent = options.get('indent',None)
+        flowstyle = options.get('flowstyle', True)
         using = options.get('database', DEFAULT_DB_ALIAS)
         connection = connections[using]
         excludes = options.get('exclude',[])
@@ -110,8 +115,14 @@
                     objects.extend(model._default_manager.using(using).all())
 
         try:
-            return serializers.serialize(format, objects, indent=indent,
-                        use_natural_keys=use_natural_keys)
+            opt = {
+                'indent':indent,
+                'use_natural_keys': use_natural_keys,
+            }
+            # This option only makes sense with yaml.
+            if format=='yaml':
+                opt['flowstyle'] = flowstyle
+            return serializers.serialize(format, objects, **opt)
         except Exception, e:
             if show_traceback:
                 raise

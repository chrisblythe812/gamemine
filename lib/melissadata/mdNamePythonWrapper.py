#@PydevCodeAnalysisIgnore
# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.36
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _mdNamePythonWrapper
import new
new_instancemethod = new.instancemethod
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

class mdName:
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mdName, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mdName, name)
    __repr__ = _swig_repr
    NoError = _mdNamePythonWrapper.mdName_NoError
    ConfigFile = _mdNamePythonWrapper.mdName_ConfigFile
    LicenseExpired = _mdNamePythonWrapper.mdName_LicenseExpired
    DatabaseExpired = _mdNamePythonWrapper.mdName_DatabaseExpired
    Unknown = _mdNamePythonWrapper.mdName_Unknown
    DefinitelyFull = _mdNamePythonWrapper.mdName_DefinitelyFull
    VeryLikelyFull = _mdNamePythonWrapper.mdName_VeryLikelyFull
    ProbablyFull = _mdNamePythonWrapper.mdName_ProbablyFull
    Varying = _mdNamePythonWrapper.mdName_Varying
    ProbablyInverse = _mdNamePythonWrapper.mdName_ProbablyInverse
    VeryLikelyInverse = _mdNamePythonWrapper.mdName_VeryLikelyInverse
    DefinitelyInverse = _mdNamePythonWrapper.mdName_DefinitelyInverse
    MixedFirstName = _mdNamePythonWrapper.mdName_MixedFirstName
    MixedLastName = _mdNamePythonWrapper.mdName_MixedLastName
    Male = _mdNamePythonWrapper.mdName_Male
    Mixed = _mdNamePythonWrapper.mdName_Mixed
    Female = _mdNamePythonWrapper.mdName_Female
    Aggressive = _mdNamePythonWrapper.mdName_Aggressive
    Neutral = _mdNamePythonWrapper.mdName_Neutral
    Conservative = _mdNamePythonWrapper.mdName_Conservative
    Formal = _mdNamePythonWrapper.mdName_Formal
    Informal = _mdNamePythonWrapper.mdName_Informal
    FirstLast = _mdNamePythonWrapper.mdName_FirstLast
    Slug = _mdNamePythonWrapper.mdName_Slug
    Blank = _mdNamePythonWrapper.mdName_Blank
    def __init__(self, *args): 
        this = apply(_mdNamePythonWrapper.new_mdName, args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _mdNamePythonWrapper.delete_mdName
    __del__ = lambda self : None;
    def SetPathToNameFiles(*args): return apply(_mdNamePythonWrapper.mdName_SetPathToNameFiles, args)
    def InitializeDataFiles(*args): return apply(_mdNamePythonWrapper.mdName_InitializeDataFiles, args)
    def GetInitializeErrorString(*args): return apply(_mdNamePythonWrapper.mdName_GetInitializeErrorString, args)
    def SetLicenseString(*args): return apply(_mdNamePythonWrapper.mdName_SetLicenseString, args)
    def GetBuildNumber(*args): return apply(_mdNamePythonWrapper.mdName_GetBuildNumber, args)
    def GetDatabaseDate(*args): return apply(_mdNamePythonWrapper.mdName_GetDatabaseDate, args)
    def GetDatabaseExpirationDate(*args): return apply(_mdNamePythonWrapper.mdName_GetDatabaseExpirationDate, args)
    def GetLicenseExpirationDate(*args): return apply(_mdNamePythonWrapper.mdName_GetLicenseExpirationDate, args)
    def SetPrimaryNameHint(*args): return apply(_mdNamePythonWrapper.mdName_SetPrimaryNameHint, args)
    def SetSecondaryNameHint(*args): return apply(_mdNamePythonWrapper.mdName_SetSecondaryNameHint, args)
    def SetFirstNameSpellingCorrection(*args): return apply(_mdNamePythonWrapper.mdName_SetFirstNameSpellingCorrection, args)
    def SetGenderPopulation(*args): return apply(_mdNamePythonWrapper.mdName_SetGenderPopulation, args)
    def SetGenderAggression(*args): return apply(_mdNamePythonWrapper.mdName_SetGenderAggression, args)
    def AddSalutation(*args): return apply(_mdNamePythonWrapper.mdName_AddSalutation, args)
    def SetSalutationPrefix(*args): return apply(_mdNamePythonWrapper.mdName_SetSalutationPrefix, args)
    def SetSalutationSuffix(*args): return apply(_mdNamePythonWrapper.mdName_SetSalutationSuffix, args)
    def SetSalutationSlug(*args): return apply(_mdNamePythonWrapper.mdName_SetSalutationSlug, args)
    def ClearProperties(*args): return apply(_mdNamePythonWrapper.mdName_ClearProperties, args)
    def SetFullName(*args): return apply(_mdNamePythonWrapper.mdName_SetFullName, args)
    def SetPrefix(*args): return apply(_mdNamePythonWrapper.mdName_SetPrefix, args)
    def SetPrefix2(*args): return apply(_mdNamePythonWrapper.mdName_SetPrefix2, args)
    def SetFirstName(*args): return apply(_mdNamePythonWrapper.mdName_SetFirstName, args)
    def SetFirstName2(*args): return apply(_mdNamePythonWrapper.mdName_SetFirstName2, args)
    def SetMiddleName(*args): return apply(_mdNamePythonWrapper.mdName_SetMiddleName, args)
    def SetMiddleName2(*args): return apply(_mdNamePythonWrapper.mdName_SetMiddleName2, args)
    def SetSuffix(*args): return apply(_mdNamePythonWrapper.mdName_SetSuffix, args)
    def SetSuffix2(*args): return apply(_mdNamePythonWrapper.mdName_SetSuffix2, args)
    def SetLastName(*args): return apply(_mdNamePythonWrapper.mdName_SetLastName, args)
    def SetLastName2(*args): return apply(_mdNamePythonWrapper.mdName_SetLastName2, args)
    def Parse(*args): return apply(_mdNamePythonWrapper.mdName_Parse, args)
    def Genderize(*args): return apply(_mdNamePythonWrapper.mdName_Genderize, args)
    def Salutate(*args): return apply(_mdNamePythonWrapper.mdName_Salutate, args)
    def GetStatusCode(*args): return apply(_mdNamePythonWrapper.mdName_GetStatusCode, args)
    def GetErrorCode(*args): return apply(_mdNamePythonWrapper.mdName_GetErrorCode, args)
    def GetChangeCode(*args): return apply(_mdNamePythonWrapper.mdName_GetChangeCode, args)
    def GetDebugInfo(*args): return apply(_mdNamePythonWrapper.mdName_GetDebugInfo, args)
    def GetResults(*args): return apply(_mdNamePythonWrapper.mdName_GetResults, args)
    def GetPrefix(*args): return apply(_mdNamePythonWrapper.mdName_GetPrefix, args)
    def GetPrefix2(*args): return apply(_mdNamePythonWrapper.mdName_GetPrefix2, args)
    def GetFirstName(*args): return apply(_mdNamePythonWrapper.mdName_GetFirstName, args)
    def GetFirstName2(*args): return apply(_mdNamePythonWrapper.mdName_GetFirstName2, args)
    def GetMiddleName(*args): return apply(_mdNamePythonWrapper.mdName_GetMiddleName, args)
    def GetMiddleName2(*args): return apply(_mdNamePythonWrapper.mdName_GetMiddleName2, args)
    def GetLastName(*args): return apply(_mdNamePythonWrapper.mdName_GetLastName, args)
    def GetLastName2(*args): return apply(_mdNamePythonWrapper.mdName_GetLastName2, args)
    def GetSuffix(*args): return apply(_mdNamePythonWrapper.mdName_GetSuffix, args)
    def GetSuffix2(*args): return apply(_mdNamePythonWrapper.mdName_GetSuffix2, args)
    def GetGender(*args): return apply(_mdNamePythonWrapper.mdName_GetGender, args)
    def GetGender2(*args): return apply(_mdNamePythonWrapper.mdName_GetGender2, args)
    def GetSalutation(*args): return apply(_mdNamePythonWrapper.mdName_GetSalutation, args)
mdName_swigregister = _mdNamePythonWrapper.mdName_swigregister
mdName_swigregister(mdName)



